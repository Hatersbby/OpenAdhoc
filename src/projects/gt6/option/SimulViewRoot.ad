













module ROOT
{
    function isOpenable(context)
    {
        return pdiext::MSystemConfiguration::isSimulViewAvailable();
    }

    method open(context)
    {
        if (!isOpenable(context))
        {
            main::sound.play("disable");
            DialogUtil::openConfirmDialog(context, DialogUtil::ERROR,
                context.translate(ROOT, "FeiledOpen_SimulViewRoot"));
            return;
        }

        SettingFrame.appear();
        SequenceUtil::pushPage(context, self);
    }

    method close(context)
    {
        var delay_time = SettingFrame.hide();
        SequenceUtil::popPage(context, self, delay_time);
    }

    method reflect(context)
    {
        var option = main::GAME_STATUS.user_profile.option;
        SettingFrame::Pane::ScrolledBody::clip::space::Battle2PDisplayMode::OptionMenu.setIndex(context, option.simulview_2p_battle);
    }

    method apply(context)
    {
        var option = main::GAME_STATUS.user_profile.option;
        option.simulview_2p_battle = SettingFrame::Pane::ScrolledBody::clip::space::Battle2PDisplayMode::OptionMenu.index;
    }

    method onInitialize(context)
    {
        if (gDirectApplyMode)
            SettingFrame::Pane::Foot.visible = false;

        reflect(context);
        SettingFrame.adjust_scrolled_body();
        ROOT.setFocus(SettingFrame::Pane::ScrolledBody::clip::space::Battle2PDisplayMode::OptionMenu);
    }

    method onCancel(context, event, item)
    {
        main::sound.play("cancel");
        if (gDirectApplyMode)
        {
            ROOT.apply();
            ROOT.close(context);
        }
        else
            ROOT.setFocus(SettingFrame::Pane::Foot::Cancel);
        
        return EVENTRESULT_FILTER;
    }

    module SettingFrame::Pane::Foot::OK
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.apply();
            ROOT.close(context);
            return EVENTRESULT_FILTER;
        }
    }

    module SettingFrame::Pane::Foot::Cancel
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.close(context);
            return EVENTRESULT_FILTER;
        }

        method onCancel(context)
        {
            main::sound.play("cancel");
            ROOT.close(context);
            return EVENTRESULT_FILTER;
        }
    }
}