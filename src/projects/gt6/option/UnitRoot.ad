













module ROOT
{
    static sPrevExtraLanguage = GAME_STATUS.user_profile.option.extra_language;
    
    static extra_language_table = [
        pdistd::Language::SYSTEM,
        pdistd::Language::TR,
        pdistd::Language::EL,
    ];

    function getIndexFromExtraLanguage(extra_language)
    {
        for (var i = 0; i < extra_language_table.size; ++i)
        {
            if (extra_language_table[i] == extra_language)
                return i;
        }
    }

    function getExtraLanguageFromIndex(index)
    {
        return extra_language_table[index];
    }

    method open(context)
    {
        SettingFrame.appear();
        SequenceUtil::pushPage(context, self);
    }

    method close(context)
    {
        var delay_time = SettingFrame.hide();
        SequenceUtil::popPage(context, self, delay_time);
    }

    method reflect(context)
    {
        var option = main::GAME_STATUS.user_profile.option;

        SettingFrame::Pane::ScrolledBody::clip::space::Velocity::OptionMenu.setIndex(context, option.unit_velocity);
        SettingFrame::Pane::ScrolledBody::clip::space::Power::OptionMenu.setIndex(context, option.unit_power);
        SettingFrame::Pane::ScrolledBody::clip::space::Torque::OptionMenu.setIndex(context, option.unit_torque);

        var c_enum_to_optionmenu_index = [
            0 : nil,
            1 : 0,
            2 : 1
        ];

        var optionmenu_index = c_enum_to_optionmenu_index[option.unit_temperature];
        SettingFrame::Pane::ScrolledBody::clip::space::Temperature::OptionMenu.setIndex(context, optionmenu_index);
    }

    method apply(context)
    {
        var option = main::GAME_STATUS.user_profile.option;

        option.unit_velocity = SettingFrame::Pane::ScrolledBody::clip::space::Velocity::OptionMenu.index;
        option.unit_power = SettingFrame::Pane::ScrolledBody::clip::space::Power::OptionMenu.index;
        option.unit_torque = SettingFrame::Pane::ScrolledBody::clip::space::Torque::OptionMenu.index;

        var optionmenu_index_to_c_enum = [
            0 : 1,
            1 : 2
        ];

        var c_enum = optionmenu_index_to_c_enum[SettingFrame::Pane::ScrolledBody::clip::space::Temperature::OptionMenu.index];
        option.unit_temperature = c_enum;

        GAME_STATUS.user_profile.option.apply();
    }

    method onInitialize(context)
    {
        if (gDirectApplyMode)
            SettingFrame::Pane::Foot.visible = false;
        
        SettingFrame.adjust_scrolled_body();
        reflect(context);
        ROOT.setFocus(SettingFrame::Pane::ScrolledBody::clip::space::Velocity::OptionMenu);
    }

    method onCancel(context)
    {
        main::sound.play("cancel");
        if (gDirectApplyMode)
        {
            ROOT.apply();
            ROOT.close(context);
        }
        else
            ROOT.setFocus(SettingFrame::Pane::Foot::Cancel);

        return 2;
    }

    module SettingFrame::Pane::Foot::OK
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.apply();
            ROOT.close(context);
            return 2;
        }
    }

    module SettingFrame::Pane::Foot::Cancel
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.close(context);
            return 2;
        }

        method onCancel(context)
        {
            main::sound.play("cancel");
            ROOT.close(context);
            return 2;
        }
    }
}