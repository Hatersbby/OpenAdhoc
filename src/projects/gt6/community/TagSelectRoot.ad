













module ROOT
{
    hidden.visible = false;

    attribute popup;
    attribute closed = false;
    attribute result;
    attribute tag_id;
    attribute tag_id_list;
    attribute genre_list;
    attribute category_list;

    method open(context, tag_id, tag_id_list)
    {
        self.tag_id = tag_id;
        self.tag_id_list = tag_id_list;
        self.result = nil;
        self.closed = false;
        self.popup = SequenceUtil::ModalPage(context, ROOT);
        self.popup.open();

        var res = self.result;
        self.result = nil;
        return res;
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;
        
        FadeActor.out = true;

        if (self.popup != nil)
        {
            self.popup.close(FadeActor.period);
            self.popup = nil;
        }

        self.tag_id = nil;
        self.tag_id_list = nil;
    }

    method onCancel(context, event, item)
    {
        main::sound.play("cancel");
        self.setFocus(Body::R::Cancel);
        return EVENTRESULT_FILTER;
    }

    method onInitialize(context)
    {
        var genre_id = MENUDB.executeQuery1R1C("SELECT GenreID FROM t_community_tag WHERE CategoryID = ?", [self.tag_id]);
        self.genre_list = MENUDB.executeQuery1C("SELECT DISTINCT GenreID FROM t_community_tag ORDER BY GenreID");

        var genre_index = 0;

        for (var i = 0; i < self.genre_list.size; ++i)
        {
            if (genre_id == self.genre_list[i])
            {
                genre_index = i;
                break;
            }
        }

        var genre_label_list = [];
        foreach (var genre in self.genre_list)
        {
            genre_label_list.push("GENRE_%{genre}");
        }

        OptionMenuUtil::initialize(context, self, Body::L::Genre::OptionMenu, hidden::PulldownItem, genre_label_list, "CommunityTag");
        Body::L::Genre::OptionMenu.setIndex(context, genre_index);

        self.tag_id = nil;
        ROOT.setFocus(Body::L::Genre::OptionMenu);
        return EVENTRESULT_FILTER;
    }

    method onFinalize(context)
    {
        OptionMenuUtil::finalize(context, Body::L::Genre::OptionMenu);
        OptionMenuUtil::finalize(context, Body::L::Category::OptionMenu);
        return EVENTRESULT_FILTER;
    }

    method onUpdate(context)
    {
        if (self.closed)
            return;

        if (!LoginUtil::isOnline())
        {
            context.pushEvent(menu::MFunctionEvent(close, context));
        }
    }

    module Body::L::Genre::OptionMenu
    {
        method onValueChanged(context)
        {
            __prototype__::onValueChanged(context);

            var genre_id = ROOT.genre_list[self.index];

            ROOT.category_list = MENUDB.executeQuery1C("SELECT CategoryID FROM t_community_tag WHERE GenreID = ? ORDER BY CategoryID", [genre_id]);

            var category_label_list = [];
            foreach (var category in ROOT.category_list)
            {
                category_label_list.push("CATEGORY_%{category}");
            }

            var index = 0;
            if (ROOT.tag_id != nil)
            {
                for (var i = 0; i < ROOT.category_list.size; ++i)
                {
                    if (ROOT.tag_id == ROOT.category_list[i])
                    {
                        index = i;
                        break;
                    }
                }
            }

            OptionMenuUtil::finalize(context, Body::L::Category::OptionMenu);
            OptionMenuUtil::initialize(context, ROOT, Body::L::Category::OptionMenu, hidden::PulldownItem, category_label_list, "CommunityTag");
            Body::L::Category::OptionMenu.setIndex(context, index);
        }
    }

    module Body::R
    {
        module Ok
        {
            method onActivate(context)
            {
                sound.play("ok");

                var category_index = Body::L::Category::OptionMenu.index;
                var category = ROOT.category_list[category_index];
                var found = false;

                foreach (var tag_id in ROOT.tag_id_list)
                {
                    if (tag_id == category)
                    {
                        found = true;
                        break;
                    }
                }

                if (found)
                {
                    ERROR(context, "Community", "ERROR_USED_TAG");
                    return EVENTRESULT_FILTER;
                }

                ROOT.result = category;
                ROOT.close(context);
                return EVENTRESULT_FILTER;
            }
        }

        module Cancel
        {
            method onCancel(context)
            {
                sound.play("cancel");
                ROOT.close(context);
                return EVENTRESULT_FILTER;
            }

            method onActivate(context)
            {
                sound.play("ok");
                ROOT.close(context);
                return EVENTRESULT_FILTER;
            }
        }
    }
}