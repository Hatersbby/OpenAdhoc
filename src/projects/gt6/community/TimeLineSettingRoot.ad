













module ROOT
{
    attribute popup;
    attribute closed = false;
    attribute result;
    attribute previous_setting;

    method open(context, data)
    {
        self.previous_setting = Map();
        self.result = false;
        self.closed = false;
        self.popup = SequenceUtil::ModalPage(context, ROOT);
        self.popup.open();
        
        var res = self.result;
        self.result = nil;
        return res;
    }

    method close(context)
    {
        if (self.closed)
            return;

        self.closed = true;
        
        FadeActor.out = true;

        if (self.popup != nil)
        {
            self.popup.close(FadeActor.period);
            self.popup = nil;
        }

        self.previous_setting = nil;
    }

    method onCancel(context, event, item)
    {
        main::sound.play("cancel");
        self.setFocus(Body::R::Cancel);
        return EVENTRESULT_FILTER;
    }

    method onInitialize(context)
    {
        var o = GAME_STATUS.user_profile.context.community;
        Body::L::CheckButtonMe::Check.active = o.timeline_me;
        Body::L::CheckButtonFriend::Check.active = o.timeline_friend;
        Body::L::CheckButtonClub::Check.active = o.timeline_club;
        Body::L::CheckButtonNews::Check.active = o.timeline_news;

        self.previous_setting["me"] = o.timeline_me;
        self.previous_setting["friend"] = o.timeline_friend;
        self.previous_setting["club"] = o.timeline_club;
        self.previous_setting["news"] = o.timeline_news;

        ROOT.setFocus(Body::R::Ok);
        return EVENTRESULT_FILTER;
    }

    method onFinalize(context)
    {
        return EVENTRESULT_FILTER;
    }

    method onUpdate(context)
    {
        if (self.closed)
            return;

        if (!LoginUtil::isOnline())
        {
            context.pushEvent(menu::MFunctionEvent(close, context));
        }
    }

    module Body::R
    {
        module Ok
        {
            method onActivate(context)
            {
                sound.play("ok");

                var o = GAME_STATUS.user_profile.context.community;

                o.timeline_me = Body::L::CheckButtonMe::Check.active;
                o.timeline_friend = Body::L::CheckButtonFriend::Check.active;
                o.timeline_club = Body::L::CheckButtonClub::Check.active;
                o.timeline_news = Body::L::CheckButtonNews::Check.active;

                var dirty = false;

                if (o.timeline_me != ROOT.previous_setting["me"] ||
                    o.timeline_friend != ROOT.previous_setting["friend"] ||
                    o.timeline_club != ROOT.previous_setting["club"] ||
                    o.timeline_news != ROOT.previous_setting["news"])
                    dirty = true;

                ROOT.result = dirty;
                ROOT.close(context);
                return EVENTRESULT_FILTER;
            }
        }

        module Cancel
        {
            method onCancel(context)
            {
                sound.play("cancel");
                ROOT.close(context);
                return EVENTRESULT_FILTER;
            }

            method onActivate(context)
            {
                sound.play("ok");
                ROOT.close(context);
                return EVENTRESULT_FILTER;
            }
        }
    }
}