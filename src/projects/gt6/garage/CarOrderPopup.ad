













module ROOT
{
    attribute modal_page;
    attribute result;
    attribute sort_type_ref;
    attribute sort_order_ref;

    method open(context, sort_type_ref, sort_order_ref)
    {
        self.sort_type_ref = sort_type_ref;
        self.sort_order_ref = sort_order_ref;
        self.modal_page = SequenceUtil::ModalPage(context, ROOT);
        self.modal_page.open();
        
        var res = self.result;
        self.result = nil;
        return res;
    }

    method close(context)
    {
        if (self.modal_page != nil)
        {
            self.modal_page.close();
            self.modal_page = nil;
        }
    }

    method onInitialize(context)
    {
        for (var w = SettingFrame::Pane::ScrolledBody::clip::space::SortType::OptionMenu::popup::vbox.first, i = 0; w != nil; w = w.next, i++)
        {
            if (w.sort_type == *self.sort_type_ref)
            {
                SettingFrame::Pane::ScrolledBody::clip::space::SortType::OptionMenu.setIndex(context, i);
                break;
            }
        }

        SettingFrame::Pane::ScrolledBody::clip::space::SortOrder::vbox::Reverse.active = *self.sort_order_ref == gtengine::GarageSortOrder::REVERSE;
    }

    method onCancel(context)
    {
        sound.play("cancel");

        var sort_type_w = SettingFrame::Pane::ScrolledBody::clip::space::SortType::OptionMenu.getItem(SettingFrame::Pane::ScrolledBody::clip::space::SortType::OptionMenu.index);
        *self.sort_type_ref = sort_type_w.sort_type;
        *self.sort_order_ref = SettingFrame::Pane::ScrolledBody::clip::space::SortOrder::vbox::Reverse.active ? gtengine::GarageSortOrder::REVERSE : gtengine::GarageSortOrder::NORMAL;
        
        self.close(context);
        return EVENTRESULT_FILTER;
    }

    module SettingFrame::Pane::ScrolledBody::clip::space::SortType::OptionMenu::popup::vbox
    {
        module Ride
        {
            attribute sort_type = gtengine::GarageSortType::RIDE;
        }

        module Obtain
        {
            attribute sort_type = gtengine::GarageSortType::OBTAIN;
        }

        module PP
        {
            attribute sort_type = gtengine::GarageSortType::PP;
        }

        module Power
        {
            attribute sort_type = gtengine::GarageSortType::POWER;
        }

        module Weight
        {
            attribute sort_type = gtengine::GarageSortType::WEIGHT;
        }

        module Year
        {
            attribute sort_type = gtengine::GarageSortType::YEAR;
        }

        module Distance
        {
            attribute sort_type = gtengine::GarageSortType::DISTANCE;
        }
    }
}