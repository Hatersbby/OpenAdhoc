

















module AppMenu
{
    import PROJECT::TopRoot::*;

    function on_photo_selected(context)
    {
        startProject(context, "photo");
    }

    function on_gps_replay(context, index, menuitem, item)
    {
        startProject(context, "gps_replay");
    }

    function on_online_lounge(context, index, menuitem, item)
    {
        if (!checkIsOnlineAvailable())
        {
            DialogUtil::openConfirmDialog(context, DialogUtil::ERROR, "現在の設定ではネットワークが利用できません。\n実行引数に network_available を追加して再起動してください。");
            return;
        }
        startProject("online");
    }

    function on_quick_match(context, index, menuitem, item)
    {
        if (!checkIsOnlineAvailable())
        {
            DialogUtil::openConfirmDialog(context, DialogUtil::ERROR, "現在の設定ではネットワークが利用できません。\n実行引数に network_available を追加して再起動してください。");
            return;
        }
        var project = main::manager.loadProject("%{main::PROJECT_DOOT_DIR}/online/online");
        finally { main::manager.unloadProject(project) }
        OnlineProject::OnlineRoot.open(context);
    }

    function on_car_description(context, index, menuitem, item, menu)
    {
        PROJECT::CarDescriptionRoot.open(context;)
    }


    function on_setting(context, index, menuitem, item, menu)
    {
        var cp = GAME_STATUS.user_profile.garage.getRidingCar();
        SettingProject::SettingRoot.open(context, cp);
    }

    function on_leavedemo(context, index, menuitem, item, menu)
    {
        SequenceUtil::startProjectSimple(context, "leavedemo", "dev_runviewer");
    }

    function on_rensen(context, index, menuitem, item, menu)
    {
        var file = pdistd::ReadFile("/game_parameter/gt6/event/r025.xml");
        if (file["buffer"] == nil)
        {
            return;
        }
        var gp_list = GameParameterUtil::parseXML(file["buffer"]);
        var sub_menu = [];
        executeGameParameter(context, gp_list[0]);
    }


    function on_salvage(context, index, menuitem, item, menu)
    {
        PROJECT.load("/scripts/gt6/util/SalvageUtil");
        SalvageUtil::salvage_replay();
    }

    function lolpls(context, index, menuitem, item, menu)
    {
        DialogUtil::openConfirmDialog(context, DialogUtil::OK, context.toString());
    }


    function onStart(context, index, menuitem, item)
    {
        if (menuitem.arg == nil)
        {
            var sub_menu = [
                MenuItem(MenuItemTEXT, "フォトモード起動", "フォトモードを起動します.", nil, nil, on_photo_selected),
                MenuItem(MenuItemTEXT, "GPSリプレイ", "生データからGPSロガーデータを作成してリプレイ再生します。", nil, nil, on_gps_replay),
                MenuItem(MenuItemTEXT, "オンラインラウンジ", "オンラインラウンジ", nil, nil, on_online_lounge),
                MenuItem(MenuItemTEXT, "クイックマッチ", "クイックマッチ", nil, nil, on_quick_match),
                MenuItem(MenuItemTEXT, "カーデスクリプション", "カーデスクリプションを表示します。", nil, nil, on_car_description),
                MenuItem(MenuItemTEXT, "セッティング", "セッティング関係です。", nil, nil, on_setting),
                MenuItem(MenuItemTEXT, "オートデモ", "GT6 のオートデモ機能です", nil, nil, on_leavedemo),
                MenuItem(MenuItemTEXT, "連戦実験", "連戦の実験機能です", nil, nil, on_rensen),
                MenuItem(MenuItemTEXT, "サルベージ", "サルベージのテスト安原用です", nil, nil, on_salvage),
            ];

            menuitem.arg = sub_menu;
        }

        open_menu(context, menuitem.label, menuitem.arg, index, 0);
    }
}
