module PROJECT
{
    static sSoundEffectHolder = nil;

    PROJECT.load("/scripts/gt6/util/ProjectHistoryUtil");
    PROJECT.load("/scripts/gt6/util/PhotoModeUtil");

    method onLoad(update_context)
    {
        update_context.createRenderContext(1);
        var render_context = update_context.getRenderContext(0);

        ProjectHistoryUtil::DefineVariables(PROJECT, [
            ['PrevProject', nil],
            ['KeyAssign::OptionIndices', Array()],
            ['KeyAssign::Config', nil]
        ]);

        var prev_project = main::GameSequence::getArgument();
        PROJECT.history['PrevProject'] = prev_project;
        
        var location_base_code = main::GameSequence::getArgumentObject();
        main::GameSequence::setArgumentObject(nil);

        PhotoTravelRoot.open(render_context, location_base_code);
        loadSoundEffect();
    }

    function loadSoundEffect()
    {
        sSoundEffectHolder = [main::pdiext::MSoundEffect("sound_gt/se/gt5photo.sgd")];
    }

    method onLoadAtRacePhoto(update_context)
    {
        update_context.createRenderContext(1);
        var render_context = update_context.getRenderContext(0);

        ProjectHistoryUtil::DefineVariables(PROJECT, [
            ['PrevProject', nil],
            ['KeyAssign::OptionIndices', Array()],
            ['KeyAssign::Config', nil],
            ['f_value', nil],
            ['shutter_speed', nil],
            ['ev', nil],
            ['focus', nil],
            ['mm', nil],
            ['filter', nil],
            ['aspect', nil],
            ['vertical', nil],
            ['output_3d', nil],
            ['aa', nil],
            ['output_size', nil],
            ['camera_follow', nil],
            ['activate_sound', nil],
        ]);

        var prev_project = main::GameSequence::getArgument();
        PROJECT.history['PrevProject'] = prev_project;
    }

    method onUnload(update_context)
    {
        var render_context = update_context.getRenderContext(0);
        render_context.disableInput();
    }

    function LoadProject(project_file, project_name)
    {
        if (__projects__.defined(project_name))
            return nil;

        var project_path = "%s/%s/%s".format(main::PROJECT_ROOT_DIR, project_file, project_file);
        return manager.loadProject(project_path);
    }

    function UnloadProject(project)
    {
        if (project == nil)
            return;

        manager.unloadProject(project);
    }
}

module PROJECT
{
    #include "Template.ad"
}