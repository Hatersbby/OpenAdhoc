













module ROOT
{
    SceneFace.transparent = true;

    attribute command;

    method open(context, gp, finish_result)
    {
        var file_id, event_name;
        if (gp.event.play_style.bspec_type == gtengine::BSpecType::ONLY_B)
        {
            file_id = ABspecUtil::getFileId(gp.event_id, true);
            event_name = context.translate(ROOT, "AspecEventInfoGT5", "r%{file_id}t");
        }
        else
        {
            file_id = ABspecUtil::getFileId(gp.event_id, false);
            event_name = context.translate(ROOT, "BspecEventInfoGT5", "r%{file_id}t");
        }

        var fmt = context.translate(ROOT, "EVENT_NAME_AND_RESULT");
        var language = pdistd::MLocale::getLanguage();
        if (language == "US" || language == "GB")
        {
            var result = "%d%s".format(finish_result + 1, pdistd::MLocale::getOrdinalSuffix(finish_result + 1));
            Info::Base::EventName.text = fmt.build(event_name, result);
        }
        else
        {
            Info::Base::EventName.text = fmt.build(event_name, finish_result + 1);
        }

        var trophy_result = finish_result;
        if (trophy_result >= 2)
            trophy_result = 2;

        var command_alias = "event_race_trophy_%d".format(trophy_result);
        self.command = CommandAlias::get(command_alias);
        self.command == nil; // normal

        SequenceUtil::pushPage(context, ROOT);
    }

    method close(context)
    {
        SequenceUtil::popPage(context, ROOT);
    }

    method endPodiumFinish(context)
    {
        context.pushEvent(menu::MScriptEvent(context, self, "_close"));
    }

    method _close(context)
    {
        close(context);
    }

    method fadePodiumFinish(context)
    {
        context.cursor_visible = false;
        Info.visible = false;
        SceneFace::ScalarInterpolator.backward();
        SceneFace::ScalarInterpolator.start();

        context.wait(1.0);

        bg::ScalarInterpolator.backward();
        bg::ScalarInterpolator.start();

        context.wait(0.5);
        endPodiumFinish(context);
    }

    method displayInformation(context)
    {
        Info.visible = true;
        context.cursor_visible = true;
        ROOT.setFocus(Info::Base::Close);
    }

    method onInitialize(context)
    {
        Info.visible = false;
        SceneFace::ScalarInterpolator.reset();
        SceneFace.opacity = 0.0;
        SoundUtil::MenuBGMCrossfadeGroup("prize");
        main::ORG.getRaceSound().start = false;
        bg::ScalarInterpolator.reset();

        if (self.command != nil)
        {
            SceneFace.execCommand(self.command);
        }

        context.pushEvent(main::menu::MScriptEvent(context, self, "on_initialize"));
        context.addTimeOut("podium_finish", displayInformation, context);
        context.setTimeOut("podium_finish", 5.0);
    }

    method on_initialize(context)
    {
        bg::ScalarInterpolator.start();
        context.wait(0.5);

        while (SceneFace.isUnderSetup())
        {
            context.wait(0.3);
        }

        SceneFace::ScalarInterpolator.start();
    }

    method onFinalize(context)
    {

    }

    method onCancel(context)
    {
        return EVENTRESULT_FILTER;
    }

    module Info::Base::Close
    {
        method onActivate(context)
        {
            main::sound.play("ok");
            ROOT.fadePodiumFinish(context);
            return EVENTRESULT_FILTER;
        }
    }
}