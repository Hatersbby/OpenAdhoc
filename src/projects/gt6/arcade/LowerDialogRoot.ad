













module ROOT
{
    hidden.visible = false;

    attribute result_;
    attribute modal_;
    attribute sound_ok = "ok";

    function open(context, page_title, button_list, default_focus_value, sound_ok)
    {
        var dialog = ROOT.doCopy();
        dialog.context_number = context.context_number;

        return dialog._open(context, page_title, button_list, default_focus_value, sound_ok);
    }

    method _open(context, page_title, button_list, default_focus_value, sound_ok)
    {
        if (sound_ok != nil)
            self.sound_ok = sound_ok;

        self.Pane::TextFace.text = page_title;
        self.Pane::HBox.clearChildren();

        var focus_w;
        foreach (var button in button_list)
        {
            var w = hidden::Item.doCopy();
            
            w.label.text = button[0];
            w.labelF.text = button[0];
            w.value = button[1];
            
            self.Pane::HBox.appendChild(context, w);

            if (default_focus_value == button[1])
                focus_w = w;
        }

        if (focus_w != nil)
            ROOT.setFocus(focus_w);
        else
            ROOT.setFocus(self.Pane::HBox.first);

        self.result_ = nil;
        self.modal_ = main::SequenceUtil::ModalPage(context, self);
        self.modal_.open();

        return self.result_;
    }

    method abort(context)
    {
        self.close(context);
    }

    method close(context)
    {
        if (self.modal_ != nil)
        {
            self.Pane::MoveY.backward();
            self.Pane::MoveY.start();
            self.modal_.close(self.Pane::MoveY.total_time);
            self.modal_ = nil;
        }
    }

    method onInitialize(context)
    {
        self.Pane::MoveY.forward();
        self.Pane::MoveY.restart();
    }

    method onActivate(context, event)
    {
        sound.play(self.sound_ok);

        if (self.sound_ok == "next")
            SoundUtil::BGMStop();

        var w = event.widget;
        self.result_ = w.value;
        self.close(context);

        return 2;
    }

    method onCancel(context)
    {
        sound.play("cancel");
        self.result_ = nil;
        self.close(context);
        return 2;
    }

    module hidden::Item
    {
        attribute value;
    }
}