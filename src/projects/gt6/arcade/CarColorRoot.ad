













module ROOT
{
    hidden.visible = false;

    attribute carcode_;
    attribute default_focus_color_;
    attribute modal_;
    attribute result_;

    method open(context, carcode, default_focus_color)
    {
        self.carcode_ = carcode;
        self.default_focus_color_ = default_focus_color;
        
        if (self.default_focus_color_ == nil)
        {
            self.default_focus_color_ = gtengine::MSpecDB::getCarVariationFlag(carcode);
        }

        self.result_ = nil;
        self.modal_ = main::SequenceUtil::ModalPage(context, self);
        self.modal_.open();
        return result_;
    }

    method close(context)
    {
        self.Pane::MoveY.backward();
        self.Pane::MoveY.restart();

        if (self.modal_ != nil)
        {
            self.modal_.close(self.Pane::MoveY.total_time);
            self.modal_ = nil;
        }
    }

    method onActivate(context)
    {
        if (gSequenceCondition.game_mode == gtengine::GameMode::TIME_ATTACK &&
            gSequenceCondition.cp.isATOnly())
        {
            sound.play("next");
        }
        else
        {
            sound.play("ok");
        }

        self.result_ = self.Pane::ListBox.focus_index;
        self.close(context);
        return EVENTRESULT_FILTER;
    }

    method onCancel(context)
    {
        sound.play("cancel");
        self.result_ = nil;
        self.close(context);
        return EVENTRESULT_FILTER;
    }

    method onInitialize(context)
    {
        var v = gtengine::MSpecDB::getCarVariation(carcode_);
        var listbox = self.Pane::ListBox;
        listbox.setItemTemplate(context, hidden::Item);
        listbox.setItemCount(v);
        listbox.focus_index = self.default_focus_color_;

        var border_w = 48;
        var listbox_max_w = 1500;
        var w = (hidden::Item.w * v) + (self.Pane::ListBox.spacing * v) + (border_w * 2);
        listbox.w = w > listbox_max_w ? listbox_max_w : w;
        listbox.minimum_width = listbox.w;
        self.Pane::MoveY.forward();
        self.Pane::MoveY.restart();

        ROOT.setFocus(self.Pane::ListBox);
    }

    module Pane::ListBox
    {
        method onFocusNotify(context, new_color, old_color)
        {
            CarDisplayRoot.setCarColor(context, new_color);
        }

        method onVisibleNotify(context, indexes)
        {
            foreach (var i in indexes)
            {
                var w = self.getItemWidget(i, context);
                w.ColorChipFace.setCarColor(ROOT.carcode_, i);
            }
        }
    }
}