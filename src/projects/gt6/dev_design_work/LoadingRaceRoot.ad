












module ROOT
{
    static sCourseCode = nil;
    static sEventType = nil;
    static sEventText = nil;

    method setup(course_code, event_type, event_text)
    {
        sCourseCode = course_code;
        sEventType = event_type;
        sEventText = event_text + event_text;
    }

    function thread_entry(context)
    {
        context.sync();
        var label = EventTitle::EventName;
        var bbox = label.getBoundingBox();
        ParticleFace::ParticleSpark::ScalarInterpolator.start_value = bbox.x;
        ParticleFace::ParticleSpark::ScalarInterpolator.end_value = bbox.x + bbox.w;
        EventTitle::EventName::EffectWipe.blind_width = bbox.w;
        EventTitle::EventName::EffectWipe::ScalarInterpolator.start();
    }

    method onInitialize(context)
    {
        setup(79, "EVENT_RACE", manager.translate("RaceTypeName", "GameMode_EVENT_RACE"));
        Base.opacity = 1;
        Base::ScalarInterpolator.stop();

        var logo = SPECDB.executeQuery1R1C("SELECT BaseName FROM COURSE WHERE ID=?", [sCourseCode]);
        Base::bg.image_path = "piece/gt6/bridge/%{sEventType}.img";
        CourseLogo::image.image_path = "piece/gt6/course_logo_L/%{logo}.img";
        EventTitle::EventName.text = sEventText;
        
        var scene_face = Flag::SceneFace;
        scene_face.setClearColorBuffer(false);

        var academy = GetVersionBranch() == "academy";
        var scene = academy ? "gtAcademyFlag" : "gtAssociationFlag";
        SceneFaceUtil::loadScene(scene_face, scene);

        var thread = Thread(thread_entry, context);
        thread.start();
    }

    method onFinalize(context)
    {
        var scene_face = Flag::SceneFace;
        scene_face.execCommand("clearAllModel");

        sCourseCode = nil;
        sEventType = nil;
        sEventText = nil;
    }

    method onPageInStart(context)
    {
        Base::ScalarInterpolator.start();
        CourseLogo::ScalarInterpolatorEnd.start();
        Flag::SceneFace.execCommand("resetSchedule");
    }
}

