


//---------------------------------------------------------------------------------------
// PresentsRoot.ad
//
// (ä¾‹)
// PresentsRoot.ad
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// function
//---------------------------------------------------------------------------------------



module ROOT
{
    attribute idx = 0;
    attribute plates = [Plate0, Plate1];

    method open(context)
    {
        SequenceUtil::startPageDirect(context, ROOT);
    }

    method close(root, context)
    {
        context.closePage(root);
    }

    method onInitialize(context)
    {
        Plate0.ScalarInterpolator.reverse = false;
        Plate0.image.ScalarInterpolator.reverse = false;
        Plate0.ScalarInterpolator.reset();
        Plate0.image.ScalarInterpolator.reset();
        Plate1.ScalarInterpolator.reverse = false;
        Plate1.image.ScalarInterpolator.reverse = false;
        Plate1.ScalarInterpolator.reset();
        Plate1.image.ScalarInterpolator.reset();
    }

    method onKeyPress(context)
    {
        return 2;
    }

    method changeImage(path)
    {
        var front = plates[self.idx];
        var back = plates[1 - self.idx];

        front.image.image_path = "/image/boot/%{path}.dds";

        if (back.image.image_path != "")
        {
            back.ScalarInterpolator.reverse = true;
            back.image.ScalarInterpolator.reverse = true;
            back.ScalarInterpolator.start();
            back.image.ScalarInterpolator.start();
        }

        front.ScalarInterpolator.reverse = false;
        front.image.ScalarInterpolator.reverse = false;
        front.ScalarInterpolator.start();
        front.image.ScalarInterpolator.start();

        self.idx = 1 - self.idx;
    }
    method informAgreedEula()
    {
        var tip = HDToolTip::tip;
        tip.resetAction();
        tip.value = manager.translate("Network", "YOU_CAN_SEE_AGREED_EULA");
    }
}