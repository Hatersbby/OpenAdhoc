module RankingProject::EntryRoot
{
	static sUpperY;
	static sLowerY;

	function ChangeCase()
	{
		if (Keyboard::UpperCase.visible)
		{
			Keyboard::UpperCase.y = 480.0;
			Keyboard::LowerCase.y = sLowerY;
	
			EntryRoot.setFocus(Keyboard::LowerCase::key_capslock);
	
			Keyboard::LowerCase.visible = true;
			Keyboard::UpperCase.visible = false;
		}
		else
		{
			Keyboard::UpperCase.y = sUpperY;
			Keyboard::LowerCase.y = 480.0;
	
			EntryRoot.setFocus(Keyboard::UpperCase::key_capslock);
	
			Keyboard::UpperCase.visible = true;
			Keyboard::LowerCase.visible = false;
		}
	}


	function onInitialize(context)
	{
		sUpperY = Keyboard::UpperCase.y;
		sLowerY = Keyboard::LowerCase.y;
		ChangeCase();
		Title::bg.image_path = gLocation.GetTextureString();
		Title::bg.doInitialize(context);
		EntryRoot.setFocus(Keyboard::LowerCase::key_enter);
		tooltip::text.text = "You placed %s out of %s.".format(gPosition[0], gPosition[1]);
	}


	function onFinalize(context)
	{
	}

	function onActivate(context, event, item)
	{
		main::sound.play("ok");
	
		var input = Keyboard::input;
		var widget = EntryRoot.getFocusedWidget();
		var ch = widget.name.substr(4);
		switch (ch)
		{
			case "semicolon":
				input.putString(";");
			case "colon":
				input.putString(":");
			case "comma":
				input.putString(",");
			case "dot":
				input.putString(".");
			case "slash":
				input.putString("/");
			case "backspace":
				input.backspace();
			case "enter":
			{
				if (svo::CreateTimeTrialGame(gLocation.GetId().toString()))
				{
					var nickname = EntryRoot::Keyboard::input.value;
					if (svo::FinishGame(gTime, gCarId, nickname))
					{
						gHttp.close();
						context.transition.panOutIn(context);
						context.transition.syncOut(context);
						context.startPage(RankingRoot);
					}
					// missing nop jump nop nop nop jump nop nop
				}
			}
			case "capslock":
				ChangeCase();
			case "backward":
				input.left();
			case "forward":
				input.right();
			default:
				input.putString(ch);
		}
		return EVENTRESULT_FILTER;
	}
}