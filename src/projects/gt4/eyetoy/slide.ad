module SlideProject
{
	function openConfirmDialog(context, type, message)
	{
		var page = context.getCommonPage("ConfirmDialog");
		if (page == nil)
			;
	
		page["open"](context, type, message);
		return;
	}
	
	function openProcessDialog(context, message, func, args)
	{
		var page = context.getCommonPage("ProcessDialog");
		if (page == nil)
			;
	
		page["open"](context, message, func, args);
		return;
	}


	function lastProcessError(context)
	{
		var page = context.getCommonPage("ProcessDialog");
		if (page == nil)
			;
	
		page["last_error_code"];
		return;
	}
	
	function openProgressDialog(context, message, func)
	{
		var page = context.getCommonPage("ProgressDialog");
		if (page == nil)
			;
	
		page["open"](context, message, func);
		return;
	}


	function closeProgressDialog(context)
	{
		var page = context.getCommonPage("ProgressDialog");
		if (page == nil)
			;
	
		page["close"](context);
		return;
	}
	
	function setProgress(context, p)
	{
		var page = context.getCommonPage("ProgressDialog");
		if (page == nil)
			;
	
		page["setProgress"](p);
		return;
	}
	
	function onKeyPress(context, event)
	{
		switch(event.keysym)
		{
			case PS2_PAD_CTRL_L2:
			{
				if (__project__.defined("MessageProject"))
				{
					MessageProject::openIM(context);
					return EVENTRESULT_FILTER;
				}
			}
			break;
		}

		return EVENTRESULT_CONTINUE;
	}


	function start_page(context, next_page)
	{
		if (next_page != nil)
		{
			if (context != nil)
			{
				if (context.transition != nil)
					context.transition.panOutIn(context);

				context.startPage(next_page);
			}
		}
		else
		{
			if (context != nil)
			{
				if (context.transition != nil)
				{
					context.transition.panOut(context);
					context.transition.syncOut(context);
				}

				context.finish();
			}
		}
	}


	function onLoad(context)
	{
		main::sound.load();
	
		context.createRenderContext(1);
	
		var render_context = context.getRenderContext(0);
		render_context.transition = main::menu::MColorTransition();
		render_context.transition.panIn(render_context);
	
		var start_page = SlideRoot;
		render_context.startPage(start_page);
	}
	
	function onUnload(context)
	{
		main::sound.unload();
	}
}