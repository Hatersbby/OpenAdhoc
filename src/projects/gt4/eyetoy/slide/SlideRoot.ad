module SlideProject::SlideRoot
{
	function sensitive()
	{
		var playing = Slide::slide.isPlaying();
	
		Start.insensitive = playing;
		Stop.insensitive = !playing;
		Exit.insensitive = playing;
	}
	
	function onInitialize(context)
	{
		sensitive();
	}
	
	function onFinalize(context)
	{
		Slide::slide.doStop();
	}


	function exit(context)
	{
		main::game.next_menu_project = main::game.last_menu_project;
		start_page(context, nil);
	}
	
	function onCancel(context)
	{
		if (Slide::slide.isPlaying())
		{
			main::sound.play("disable");
		}
		else
		{
			main::sound.play("cancel");
			exit(context);
		}
	
		return EVENTRESULT_FILTER;
	}
}

module SlideProject::SlideRoot::Slide::slide
{
	function onError(context)
	{
		openConfirmDialog(context, 0, "error happend")
		slide.doStop();
		exit();
	}
}

module SlideProject::SlideRoot::Start
{
	function onActivate(context)
	{
		if (!Slide::slide.isPlaying())
		{
			main::sound.play("ok");
			Slide::slide.doPlay();
			sensitive();
			SlideRoot.setFocus(Stop);
		}
	
		return EVENTRESULT_FILTER;
	}
}

module SlideProject::SlideRoot::Stop
{
	function onActivate(context)
	{
		if (Slide::slide.isPlaying())
		{
			main::sound.play("ok");
			Slide::slide.doStop();
			sensitive();
			SlideRoot.setFocus(Start);
		}
	
		return EVENTRESULT_FILTER;
	}
}

module SlideProject::SlideRoot::Exit
{
	function onActivate(context)
	{
		if (!Slide::slide.isPlaying())
		{
			main::sound.play("ok");
			exit(context);
		}
	
		return EVENTRESULT_FILTER;
	}
}