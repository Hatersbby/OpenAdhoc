//---------------------------------------------------------------------------------------
// QuickTunePopup.ad
//
// Arcade mode Pre-race Menu: Quick Tune menu
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module QuickArcadeProject::QuickTunePopup
{
	#include "../quick-share/quick_tune_popup.ad";

	function initTransmissionWidget(context)
	{
		initialize_optionmenu(context,Pane::TransMission::OptionMenu,transmission_type);
		Pane::TransMission::OptionMenu.setIndex(context,transmission);
	}

	function initDrivingAssistWidget(context, disable)
	{
		initialize_optionmenu(context,Pane::DrivingAssist::OptionMenu,driving_assist_type);
	
		if (disable != nil && disable)
		{
			Pane::DrivingAssist::OptionMenu.setIndex(context, 0);
			Pane::DrivingAssist::OptionMenu.insensitive = 1;
		}
		else
		{
			Pane::DrivingAssist::OptionMenu.setIndex(context, driving_assist);
			Pane::DrivingAssist::OptionMenu.insensitive = 0;
		}
	}

	function initTireWidget(context)
	{
		var quick_work = main::menu::MQuickWork();
	
		if (quick_work.IsDryCourse != 1)
		{
			Pane::Tire::OptionMenu.insensitive = 1;
			Pane::Tire::Front.insensitive = 1;
			Pane::Tire::Rear.insensitive = 1;
			return;
		}
	
		TireGroupIndex = 0;
	
		if (CarType == 1)
		{
			initTireWidget_Racing(context);
		}
		else
		{
			initTireWidget_N_S(context);
		}
	}

	function initTireWidget_N_S(context)
	{
		initialize_optionmenu(context, Pane::Tire::OptionMenu, tire_group_n_s);
	
		var ofs = 0;
	
		if (frontTireType >= 0 && frontTireType <= 2)
		{
			initialize_optionmenu(context, Pane::Tire::Front, tire_category_normal);
			initialize_optionmenu(context, Pane::Tire::Rear, tire_category_normal);
		}
		else
		{
			initialize_optionmenu(context, Pane::Tire::Front, tire_category_sports);
			initialize_optionmenu(context, Pane::Tire::Rear, tire_category_sports);
	
			TireGroupIndex = 1;
			Pane::Tire::OptionMenu.setIndex(context, 1);
	
			ofs = -3;
		}
	
		var idx = frontTireType;
		Pane::Tire::Front.setIndex(context, idx + ofs);
	
		idx = rearTireType;
		Pane::Tire::Rear.setIndex(context, idx + ofs);
	}

	function initTireWidget_Racing(context)
	{
		initialize_optionmenu(context, Pane::Tire::OptionMenu, tire_group_racing);
		initialize_optionmenu(context, Pane::Tire::Front, tire_category_racing);
		initialize_optionmenu(context, Pane::Tire::Rear, tire_category_racing);
	
		var ofs = 0;
	
		if (CarType == 1)
		{
			ofs = -6;
		}
	
		var idx = frontTireType;
		Pane::Tire::Front.setIndex(context, idx + ofs);
	
		idx = rearTireType;
		Pane::Tire::Rear.setIndex(context, idx + ofs);
	}

	function initialize_optionmenu(context, optionmenu, options)
	{
		var vbox = optionmenu["popup"]["vbox"];
		var num = options.size;
		var i = 0;
	
		while (i < num)
		{
			var item = QuickTunePopup::Hidden::DummyItem.doCopy();
	
			item["label"].text = context.translate(QuickTunePopup, options[i]);
			item["label"].adjustScale();
	
			item.name = options[i];
			vbox.appendChild(context, item);
	
			i++;
		}
	
		optionmenu.applyAppend(context);
	}

	function setupSlider(slider)
	{
		slider["label"].text = slider.index;
		slider["label"].text += "%%";
	
		if (slider.index > 0)
		{
			slider["label"].text = "+" + slider["label"].text;
		}
	
		var popup = slider["popup"];
		popup["min"].text = slider.min;
		popup["max"].text = slider.max;
		popup["pinch"]["value"].text = slider.index;
	}

	function setupSlider_MaxSpeed(slider)
	{
		if (slider.min == 0 && slider.max == 0)
		{
			slider.insensitive = 1;
			return;
		}
	
		slider["label"].text = slider.index * 10;
		slider["label"].text += "km";
	
		var popup = slider["popup"];
		popup["min"].text = slider.min * 10;
		popup["max"].text = slider.max * 10;
		popup["pinch"]["value"].text = slider.index * 10;
	}

	function refrect(context)
	{
		if (QuickTunePopup::originalPower == 0)
		{
			Pane::Info::Power.text = "--";
		}
		else
		{
			var w = (QuickTunePopup::originalPower * (100 + QuickTunePopup::powerLevel)) / 100;
			Pane::Info::Power.text = main::menu::MUnit::GetPowerForDisplay(w);
		}
	
		var w = (QuickTunePopup::originalWeight * (100 + QuickTunePopup::weightLevel)) / 100;
		Pane::Info::Weight.text = w;
	}

	function store(context)
	{
		var quick_work = main::menu::MQuickWork();
	
		var playerGrid = quick_work.numberOfEntries - 1;
	
		originalPower = quick_work.getPower(playerGrid);
		originalWeight = quick_work.getWeight(playerGrid);
	
		powerLevel = quick_work.QuickTunePowerLevel;
		weightLevel = quick_work.QuickTuneWeightLevel;
	
		frontTireType = quick_work.QuickTuneFrontTireType;
		rearTireType = quick_work.QuickTuneRearTireType;
	
		gearMaxSpeed = quick_work.QuickTuneGearMaxSpeed;
		gearMaxSpeed_min = quick_work.QuickTuneGearMaxSpeedMin;
		gearMaxSpeed_max = quick_work.QuickTuneGearMaxSpeedMax;
	
		quick_work.QuickTuneTransmission = store_Transmission_from_Option(context);
		quick_work.QuickTuneDrivingAssist = store_ASM_TCS_from_Option(context);
	
		transmission = quick_work.QuickTuneTransmission;
		driving_assist = quick_work.QuickTuneDrivingAssist;
	}

	function apply(context)
	{
		var quick_work = main::menu::MQuickWork();
	
		quick_work.QuickTunePowerLevel = Pane::Power::slider.index;
		quick_work.QuickTuneWeightLevel = Pane::Weight::slider.index;
		quick_work.QuickTuneGearMaxSpeed = gearMaxSpeed;
		quick_work.QuickTuneTransmission = transmission;
		quick_work.QuickTuneDrivingAssist = driving_assist;
	
		var offset = 0;
	
		if (CarType == 1)
		{
			offset = 6;
		}
		else if (Pane::Tire::OptionMenu.index >= 1)
		{
			offset = 3;
		}
	
		if (quick_work.IsDryCourse != 0)
		{
			quick_work.QuickTuneFrontTireType = Pane::Tire::Front.index + offset;
			quick_work.QuickTuneRearTireType = Pane::Tire::Rear.index + offset;
		}
	
		quick_work.IsQuickTuned = 1;
	
		apply_Transmission_to_Option(context, transmission);
		apply_ASM_TCS_to_Option(context, driving_assist);
	}

	function apply_ASM_TCS_to_Option(context, idx)
	{
		var option = main::game.option;
		option.assist_asm = (idx == 2);
		option.assist_tcs = (idx > 0);
	}

	function store_ASM_TCS_from_Option(context)
	{
		var option = main::game.option;
	
		if (option.assist_asm && option.assist_tcs)
			return 2;
		else if (option.assist_tcs)
			return 1;
		else
			return 0;
	}

	function apply_Transmission_to_Option(context, trans)
	{
		var option = main::game.option;
		option.automatic_gear = (1 - trans);
	}

	function store_Transmission_from_Option(context)
	{
		var option = main::game.option;
		return (1 - option.automatic_gear);
	}

	function isDirt(course_code)
	{
		var ctype = main::menu::MCourseData::GetType(course_code);
		return (ctype == "dirt" || ctype == "snow");
	}

	static originalPower = nil;
	static originalWeight = nil;
	
	static powerLevel = nil;
	static weightLevel = nil;
	
	static gearMaxSpeed = nil;
	static gearMaxSpeed_min = nil;
	static gearMaxSpeed_max = nil;
	
	static frontTireType = nil;
	static rearTireType = nil;
	
	static transmission = nil;
	static driving_assist = nil;
	
	static CarType = nil;
	static TireGroupIndex = nil;

	function onInitialize(context)
	{
		var quick_work = main::menu::MQuickWork();
	
		Hidden.visible = 0;
	
		store(context);
	
		QuickTunePopup::Pane::Info::PowerUnit.text = main::menu::MUnit::GetUnitOfPower();
	
		if (frontTireType >= 6 && frontTireType <= 10)
		{
			CarType = 1;
		}
		else
		{
			CarType = 0;
		}
	
		Pane::Power::slider.index = powerLevel;
		Pane::Weight::slider.index = weightLevel;
	
		setupSlider(Pane::Power::slider);
		setupSlider(Pane::Weight::slider);
	
		Pane::GearMaxSpeed::slider.range = [gearMaxSpeed_min, gearMaxSpeed_max];
		Pane::GearMaxSpeed::slider.index = gearMaxSpeed;
	
		setupSlider_MaxSpeed(Pane::GearMaxSpeed::slider);
	
		initTransmissionWidget(context);
	
		initDrivingAssistWidget(context, isDirt(main::game.course_code));
	
		initTireWidget(context);
	
		refrect(context);
	}

	function open(context)
	{
		context.startPage(QuickTunePopup);
	}
	
	function close(context)
	{
		context.startPage(ArcadeRoot);
	}

	function onFinalize(context)
	{
		Pane::Tire::OptionMenu::popup::vbox.clearWindow(context);
		Pane::Tire::Front::popup::vbox.clearWindow(context);
		Pane::Tire::Rear::popup::vbox.clearWindow(context);
		Pane::TransMission::OptionMenu::popup::vbox.clearWindow(context);
		Pane::DrivingAssist::OptionMenu::popup::vbox.clearWindow(context);
	}

	function onCancel(context)
	{
		main::sound.play("cancel");
		close(context);
		return 2;
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::Power::slider
{
	function onValueChanged(context)
	{
		setupSlider(slider);
		QuickTunePopup::powerLevel = slider.index;
		refrect(context);
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::Weight::slider
{
	function onValueChanged(context)
	{
		setupSlider(slider);
		QuickTunePopup::weightLevel = slider.index;
		refrect(context);
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::GearMaxSpeed::slider
{
	function onValueChanged(context)
	{
		setupSlider_MaxSpeed(slider);
		QuickTunePopup::gearMaxSpeed = slider.index;
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::DrivingAssist::OptionMenu
{
	function onValueChanged(context)
	{
		driving_assist = QuickTunePopup::Pane::DrivingAssist::OptionMenu.index;
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::TransMission::OptionMenu
{
	function onValueChanged(context)
	{
		transmission = QuickTunePopup::Pane::TransMission::OptionMenu.index;
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::Tire::OptionMenu
{
	function onValueChanged(context)
	{
		if (TireGroupIndex == QuickTunePopup::Pane::Tire::OptionMenu.index)
			return;
	
		TireGroupIndex = QuickTunePopup::Pane::Tire::OptionMenu.index;
	
		QuickTunePopup::Pane::Tire::Front::popup::vbox.clearWindow(context);
		QuickTunePopup::Pane::Tire::Rear::popup::vbox.clearWindow(context);
	
		if (QuickTunePopup::Pane::Tire::OptionMenu.index == 0)
		{
			initialize_optionmenu(context, QuickTunePopup::Pane::Tire::Front, tire_category_normal);
			initialize_optionmenu(context, QuickTunePopup::Pane::Tire::Rear, tire_category_normal);
		}
		else
		{
			initialize_optionmenu(context, QuickTunePopup::Pane::Tire::Front, tire_category_sports);
			initialize_optionmenu(context, QuickTunePopup::Pane::Tire::Rear, tire_category_sports);
		}
	
		QuickTunePopup::Pane::Tire::Front.setIndex(context, 0);
		QuickTunePopup::Pane::Tire::Rear.setIndex(context, 0);
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::Buttons::Cancel
{
	function onActivate(context)
	{
		main::sound.play("ok");
		close(context);
		return EVENTRESULT_FILTER;
	}
}

module QuickArcadeProject::QuickTunePopup::Pane::Buttons::OK
{
	function onActivate(context)
	{
		main::sound.play("ok");
		apply(context);
		close(context);
		return EVENTRESULT_FILTER;
	}
}