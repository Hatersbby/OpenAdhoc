static sSvoGameId = "0";
static sIpAddress = nil;

function GetUrl(urlName)
{
	var svoRoot = main::network.svo_url;
	var node;
	if ((node = gHttp.GetXml(svoRoot)) == nil)
		return nil;

	gHttp.PrintXmlNodes(node, 0);

	if ((node = node.getFirstNode("XML")) == nil)
		return nil;

	if ((node = node.getFirstNode("URL_List")) == nil)
		return nil;

	sIpAddress = node.getAttribute("IPAddress")
	if (sIpAddress == nil)
		return nil;

	if ((node = node.getFirstNode(urlName)) == nil)
		return nil;

	return node.value;
}

function GetFirstNode(urlName, firstNodeName)
{
	var url;
	if ((url = GetUrl(urlName)) == nil)
		return nil;

	var node;
	if ((node = gHttp.GetXml(url)) == nil)
		return nil;

	gHttp.PrintXmlNodes(node, 0);

	if ((node = node.getFirstNode("XML")) == nil)
		return nil;

	
	if ((node = node.getFirstNode(firstNodeName)) == nil)
		return nil;

	return node;
}

function GetResultId(node, statusName)
{
	if (node == nil)
		return nil;

	
	if ((node = node.getFirstNode("XML")) == nil)
		return nil;

	
	if ((node = node.getFirstNode(statusName)) == nil)
		return nil;

	
	if ((node = node.getFirstNode("status")) == nil)
		return nil;

	var nodeId;
	if ((nodeId = node.getFirstNode("id")) == nil)
		return nil;

	var nodeMessage;
	if ((nodeMessage = node.getFirstNode("message")) != nil)
		;
	
	return nodeId.value;
}

function GetResult(node, statusName, successId)
{
	var id;
	if ((id = GetResultId(node, statusName)) == nil)
		return 0;

	var success = (id == successId);
	if (!success)
		;
	return success;
}

function PushRequest(array, node, attr, value)
{
	var tmp = node.getFirstNode(attr);
	if (tmp == nil)
		;
	else
	{
		var str = tmp.getAttribute("name");
		if (str != nil)
		{
			array.push(str);
			array.push(value);
		}
	}
}

function Login(accountId, user, password)
{
	var node;
	if ((node = GetFirstNode("loginURL", "Login")) == nil)
		return false;

	var url = node.getAttribute("action");
	var array = [];

	PushRequest(array, node, "userName", user);
	PushRequest(array, node, "accountID", accountId);

	node = gHttp.PostSvoLogin(url, user, password, sIpAddress, array);

	GetResult(node, "Login", "20600");
	return;
}


function Logout()
{
	var node;
	if ((node = GetFirstNode("logoutURL", "Logout")) == nil)
		return false;
	else
		return true;
}

function CreateArcadeGame(mediusGameId, remotePlayers, eventId)
{
	var node;
	if ((node = GetFirstNode("gameArcadeCreateURL", "Create_Game")) == nil)
		return false;

	var url = node.getAttribute("action");

	var array = [];

	PushRequest(array, node, "SCERTGameID", mediusGameId);

	var nodeGameMode;
	if ((nodeGameMode = node.getFirstNode("GameMode")) != nil)
		PushRequest(array, node, "GameMode", nodeGameMode.value);

	var gameName = main::network.my_name + main::menu::MSystem::GetGMTDateTimeString();
	PushRequest(array, node, "GameName", gameName);
	PushRequest(array, node, "HostPlayerList", main::network.my_id.toString());
	PushRequest(array, node, "RemotePlayerList", remotePlayers);
	PushRequest(array, node, "TimePerDivision", "30");
	PushRequest(array, node, "NumDivisions", "1");
	PushRequest(array, node, "locationID", eventId);

	node = gHttp.PostXml(url, array);

	var result = GetResultId(node, "Create_Game");
	if (result == "20400")
	{
		var node;
		if ((node = node["XML"][0]["Create_Game"][0]["gameID"]) == nil)
			return false;

		sSvoGameId = node[0].value;
		main::network.raceMasterNotifySvoGameId(sSvoGameId.toInt());
		return true;
	}
	else
		return false;
}

static sLocationRankingUrl = nil;

function GetLocationRankingSelection()
{
	var node;
	if ((node = (GetFirstNode("statsLocationURL", "Location_Leaderboard"))) == nil)
		return nil;

	gHttp.PrintXmlNodes(node, 0);

	var url = node.getAttribute("action");

	if ((node = node.getFirstNode("locations")) == nil)
		return nil;

	var type;
	if ((type = node.getAttribute("type")) == nil)
		return nil;

	if (type != "select")
		return nil;

	var name;
	if ((name = node.getAttribute("name")) == nil)
		return nil;

	sLocationRankingUrl = url + "?" + name + "=";

	var nodeList;
	if ((nodeList = node["location"]) == nil)
		return nil;

	var array = [];
	var i = 0;
	while (i < nodeList.size)
	{
		if (nodeList[i] == nil)
			return nil;

		var id;
		if ((id = nodeList[i].getAttribute("ID")) == nil)
			return nil;

		var pair = [];
		pair.push(id);
		pair.push(nodeList[i].value);
		array.push(pair);

		i++;
	}
	return array;
}

function GetLocationRanking(locationId, start, count)
{
	if (sLocationRankingUrl == nil)
	{
		var node;
		if ((node = GetFirstNode("statsLocationURL", "Location_Leaderboard")) == nil)
			return nil;

		var url = node.getAttribute("action");

		if ((node = node.getFirstNode("locations")) == nil)
			return nil;

		var name;
		if ((name = node.getAttribute("name")) == nil)
			return nil;

		sLocationRankingUrl = url + "?" + name + "=";
	}

	var url = sLocationRankingUrl + locationId + "&start=" + start.toString() + "&end=" + (start + count - 1).toString();

	var node;
	if ((node = gHttp.GetXml(url)) == nil)
		return nil;

	gHttp.PrintXmlNodes(node, 0);

	if ((node = node.getFirstNode("XML")) == nil)
		return nil;

	if ((node = node.getFirstNode("Location_Leaderboard")) == nil)
		return nil;

	if ((node = node.getFirstNode("Stats")) == nil)
		return nil;

	var mydata = nil;
	var my;
	if ((my = node.getFirstNode("my")) != nil)
	{
		var rank;
		if ((rank = my.getAttribute("rank")) == nil)
			return nil;

		var car;
		if ((car = my.getAttribute("CAR")) == nil)
			return nil;

		var results;
		if ((results = my.getAttribute("RESULTS")) == nil)
			return nil;

		mydata = [];
		mydata.push(rank);
		mydata.push(car);
		mydata.push(results);
	}

	var array = [];

	var nodeList;
	if ((nodeList = node["user"]) != nil)
	{
		var i = 0;
		while (i < nodeList.size)
		{
			if (nodeList[i] == nil)
				return nil;

			var rank;
			if ((rank = nodeList[i].getAttribute("rank")) == nil)
				return nil;

			var id;
			if ((id = nodeList[i].getAttribute("userID")) == nil)
				return nil;

			var name;
			if ((name = nodeList[i].getAttribute("username")) == nil)
				return nil;

			var car;
			if ((car = nodeList[i].getAttribute("CAR")) == nil)
				return nil;

			var results;
			if ((results = nodeList[i].getAttribute("RESULTS")) == nil)
				return nil;

			var data = [];
			data.push(rank);
			data.push(id);
			data.push(name);
			data.push(car);
			data.push(results);
			array.push(data);
			i++;
		}
	}
	return [mydata, array];
}