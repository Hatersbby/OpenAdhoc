function updateMyCarCode(context)
{
    var stats = main::menu::MPlayerStats::unpack(main::network.accountGetStats());

    var car_code_array = stats.carcode;
    var car_label = main::menu::MCarData::GetCarLabelByArray(car_code_array);
 
    if (!main::game.garage.hasRidingCar())
    {
        stats.resetRidingCar();
        stats.car_color_index = -1;
    }
    else 
    {
        var riding_car = main::game.garage.riding_car;
        var car_code = riding_car.car_code;
        var array = main::menu::MCarData::GetArrayCarCode(car_code);

        stats.carcode = array;
        stats.car_color_index = riding_car.getColorIndex();
    }

    var strStats = stats.pack();
    var res = main::network.accountUpdateStats(strStats);

    if (!res)
    {
        openOnlineErrorDialog(context);
        restart(context);
        return;
    }
}

function getPlayerProfile(context, id, is_no_check_null_str)
{
    var info = main::network.getPlayerInfo(id);

    if (info == nil)
    {
        openOnlineErrorDialog(context);
        return nil;
    }

    var player_status = info[0];
    var name = info[1];
    var strStats = info[2];
    var stats = main::menu::MPlayerStats::unpack(strStats);

    var is_mine = main::network.my_id == id;
    is_no_check_null_str = is_no_check_null_str != nil && is_no_check_null_str;

    var res = [];
    res.push(is_mine ? (is_no_check_null_str ? name : checkNullStr(name)) : checkNullStr(textFilter(name)));
    res.push(is_mine ? (is_no_check_null_str ? stats.name : checkNullStr(stats.name)) : checkNullStr(textFilter(stats.name)));
    res.push(is_mine ? (is_no_check_null_str ? stats.location : checkNullStr(stats.location)) : checkNullStr(textFilter(stats.location)));
    res.push(stats.sex);
    res.push(stats.age);
    res.push(is_mine ? (is_no_check_null_str ? stats.comment : checkNullStr(stats.comment)) : checkNullStr(textFilter(stats.comment)));

    var point = "";

    if (stats.isCurrentVersion())
        point = "%d (%d/%d)".format(stats.point, stats.num_win, stats.num_game);
    else
        point = "%d".format(stats.point);
        
    res.push(point);

    var riding_car_color_index = -1;
    var riding_car_label = "";
    var riding_car_text = "--";

    if (stats.isCurrentVersion() && stats.hasRidingCar())
    {
        riding_car_color_index = stats.car_color_index;
        riding_car_label = main::menu::MCarData::GetCarLabelByArray(stats.carcode);
        riding_car_text = main::menu::MCarData::GetCarName(riding_car_label);
    }

    res.push(riding_car_color_index);
    res.push(riding_car_label);
    res.push(riding_car_text);

    return res;
}

function textFilter(text)
{
    return main::network.textFilter(text, 1);
}

function checkNullStr(text)
{
    if (text == nil || text == "")
        return "--";
    else
        return text;
}

function isOnlineManager()
{
    return main.defined("OnlineManagerMode") && main::OnlineManagerMode == 1;
}