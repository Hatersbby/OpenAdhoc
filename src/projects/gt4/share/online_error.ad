static sOtherError = 0;

function getErrorMessage(context, error_code, retry)
{
    if (error_code == nil)
    {
        error_code = main::network.getLastErrorCode();
    }

    var key = "error:" + error_code;
    var value = context.translate(PROJECT, "OnlineMessage", key);

    if (key == value)
    {
        sOtherError = 1;
        value = context.translate(PROJECT, "OnlineMessage", "OTHER_ERROR").build(error_code);
        value += "" + context.translate(PROJECT, "OnlineMessage", "YOUR_IP").build(main::network.getWorkingIP());
    }

    if (retry == nil)
    {
        retry = 0;
    }

    if (retry)
    {
        value += "" + context.translate(PROJECT, "OnlineMessage", "DO_YOU_RETRY");
    }

    return value;
}

function openOnlineErrorDialog(context, type)
{
    main::sound.play("disable");

    if (type == nil)
    {
        type = 2;
    }

    sOtherError = 0;

    var res = nil;
    switch(type)
	{
		case 0:
		{
			res = openConfirmDialog(context, 2, getErrorMessage(context));
			break;
		}
		case 1:
		{
			res = openConfirmDialog(context, type, getErrorMessage(context, nil, 1));
			break;
		}
		case 2:
		{
			res = openConfirmDialog(context, 2, getErrorMessage(context));
			break;
		}
	}
    return res;
}


function wasErrorOther()
{
    return sOtherError;
}