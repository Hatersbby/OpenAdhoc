// quick_tune_popup.ad
static tire_group_n_s = [];
tire_group_n_s.push("text_id_tire_group1");
tire_group_n_s.push("text_id_tire_group2");

static tire_category_normal = [];
tire_category_normal.push("text_id_tire_type0");
tire_category_normal.push("text_id_tire_type1");
tire_category_normal.push("text_id_tire_type2");

static tire_category_sports = [];
tire_category_sports.push("text_id_tire_type3");
tire_category_sports.push("text_id_tire_type4");
tire_category_sports.push("text_id_tire_type5");

static tire_group_racing = [];
tire_group_racing.push("text_id_tire_group3");

static tire_category_racing = [];
tire_category_racing.push("text_id_tire_type6");
tire_category_racing.push("text_id_tire_type7");
tire_category_racing.push("text_id_tire_type8");
tire_category_racing.push("text_id_tire_type9");
tire_category_racing.push("text_id_tire_type10");

static transmission_type = [];
transmission_type.push("text_id_AT");
transmission_type.push("text_id_MT");

static driving_assist_type = [];
driving_assist_type.push("text_id_driving_assist_none");
driving_assist_type.push("text_id_driving_assist_tcs");
driving_assist_type.push("text_id_driving_assist_tcs_asm");

function initTransmissionWidget(context)
{
	initialize_optionmenu(context,Pane::TransMission::OptionMenu,transmission_type);
	Pane::TransMission::OptionMenu.setIndex(context,transmission);
}

function initDrivingAssistWidget(context, disable)
{
	initialize_optionmenu(context,Pane::DrivingAssist::OptionMenu,driving_assist_type);

	if (disable != nil && disable)
	{
		Pane::DrivingAssist::OptionMenu.setIndex(context, 0);
		Pane::DrivingAssist::OptionMenu.insensitive = 1;
	}
	else
	{
		Pane::DrivingAssist::OptionMenu.setIndex(context, driving_assist);
		Pane::DrivingAssist::OptionMenu.insensitive = 0;
	}
}

function initTireWidget(context)
{
	var quick_work = main::menu::MQuickWork();

	if (quick_work.IsDryCourse != 1)
	{
		Pane::Tire::OptionMenu.insensitive = 1;
		Pane::Tire::Front.insensitive = 1;
		Pane::Tire::Rear.insensitive = 1;
		return;
	}

	TireGroupIndex = 0;

	if (CarType == 1)
	{
		initTireWidget_Racing(context);
	}
	else
	{
		initTireWidget_N_S(context);
	}
}

function initTireWidget_N_S(context)
{
	initialize_optionmenu(context, Pane::Tire::OptionMenu, tire_group_n_s);

	var ofs = 0;

	if (0 <= frontTireType && frontTireType <= 2)
	{
		initialize_optionmenu(context, Pane::Tire::Front, tire_category_normal);
		initialize_optionmenu(context, Pane::Tire::Rear, tire_category_normal);
	}
	else
	{
		initialize_optionmenu(context, Pane::Tire::Front, tire_category_sports);
		initialize_optionmenu(context, Pane::Tire::Rear, tire_category_sports);

		TireGroupIndex = 1;
		Pane::Tire::OptionMenu.setIndex(context, 1);

		ofs = -3;
	}

	var idx = frontTireType;
	Pane::Tire::Front.setIndex(context, idx + ofs);

	idx = rearTireType;
	Pane::Tire::Rear.setIndex(context, idx + ofs);
}

function initTireWidget_Racing(context)
{
	initialize_optionmenu(context, Pane::Tire::OptionMenu, tire_group_racing);
	initialize_optionmenu(context, Pane::Tire::Front, tire_category_racing);
	initialize_optionmenu(context, Pane::Tire::Rear, tire_category_racing);

	var ofs = 0;

	if (CarType == 1)
	{
		ofs = -6;
	}

	var idx = frontTireType;
	Pane::Tire::Front.setIndex(context, idx + ofs);

	idx = rearTireType;
	Pane::Tire::Rear.setIndex(context, idx + ofs);
}

function initialize_optionmenu(context, optionmenu, options)
{
	var vbox = optionmenu["popup"]["vbox"];
	var num = options.size;
	var i = 0;

	while (i < num)
	{
		var item = QuickTunePopup::Hidden::DummyItem.doCopy();

		item["label"].text = context.translate(QuickTunePopup, options[i]);
		item["label"].adjustScale();

		item.name = options[i];
		vbox.appendChild(context, item);

		i++;
	}

	optionmenu.applyAppend(context);
}

function setupSlider(slider)
{
	slider["label"].text = slider.index;
	slider["label"].text += "%%";

	if (slider.index > 0)
	{
		slider["label"].text = "+" + slider["label"].text;
	}

	var popup = slider["popup"];
	popup["min"].text = slider.min;
	popup["max"].text = slider.max;
	popup["pinch"]["value"].text = slider.index;
}

function setupSlider_MaxSpeed(slider)
{
	if (slider.min == 0 && slider.max == 0)
	{
		slider.insensitive = 1;
		return;
	}

	slider["label"].text = slider.index * 10;
	slider["label"].text += "km";

	var popup = slider["popup"];
	popup["min"].text = slider.min * 10;
	popup["max"].text = slider.max * 10;
	popup["pinch"]["value"].text = slider.index * 10;
}

function refrect(context)
{
	if (QuickTunePopup::originalPower == 0)
	{
		Pane::Info::Power.text = "--";
	}
	else
	{
		var w = (QuickTunePopup::originalPower * (100 + QuickTunePopup::powerLevel)) / 100;
		Pane::Info::Power.text = main::menu::MUnit::GetPowerForDisplay(w);
	}

	var w = (QuickTunePopup::originalWeight * (100 + QuickTunePopup::weightLevel)) / 100;
	Pane::Info::Weight.text = w;
}

function store(context)
{
	var quick_work = main::menu::MQuickWork();

	var playerGrid = quick_work.numberOfEntries - 1;

	originalPower = quick_work.getPower(playerGrid);
	originalWeight = quick_work.getWeight(playerGrid);

	powerLevel = quick_work.QuickTunePowerLevel;
	weightLevel = quick_work.QuickTuneWeightLevel;

	frontTireType = quick_work.QuickTuneFrontTireType;
	rearTireType = quick_work.QuickTuneRearTireType;

	gearMaxSpeed = quick_work.QuickTuneGearMaxSpeed;
	gearMaxSpeed_min = quick_work.QuickTuneGearMaxSpeedMin;
	gearMaxSpeed_max = quick_work.QuickTuneGearMaxSpeedMax;

	quick_work.QuickTuneTransmission = store_Transmission_from_Option(context);
	quick_work.QuickTuneDrivingAssist = store_ASM_TCS_from_Option(context);

	transmission = quick_work.QuickTuneTransmission;
	driving_assist = quick_work.QuickTuneDrivingAssist;
}

function apply(context)
{
	var quick_work = main::menu::MQuickWork();

	quick_work.QuickTunePowerLevel = Pane::Power::slider.index;
	quick_work.QuickTuneWeightLevel = Pane::Weight::slider.index;
	quick_work.QuickTuneGearMaxSpeed = gearMaxSpeed;
	quick_work.QuickTuneTransmission = transmission;
	quick_work.QuickTuneDrivingAssist = driving_assist;

	var offset = 0;

	if (CarType == 1)
	{
		offset = 6;
	}
	else if (Pane::Tire::OptionMenu.index >= 1)
	{
		offset = 3;
	}

	if (quick_work.IsDryCourse != 0)
	{
		quick_work.QuickTuneFrontTireType = Pane::Tire::Front.index + offset;
		quick_work.QuickTuneRearTireType = Pane::Tire::Rear.index + offset;
	}

	quick_work.IsQuickTuned = 1;

	apply_Transmission_to_Option(context, transmission);
	apply_ASM_TCS_to_Option(context, driving_assist);
}

function apply_ASM_TCS_to_Option(context, idx)
{
	var option = main::game.option;
	option.assist_asm = (idx == 2);
	option.assist_tcs = (idx > 0);
}

function store_ASM_TCS_from_Option(context)
{
	var option = main::game.option;

	if (option.assist_asm && option.assist_tcs)
		return 2;
	else if (option.assist_tcs)
		return 1;
	else
		return 0;
}

function apply_Transmission_to_Option(context, trans)
{
	var option = main::game.option;
	option.automatic_gear = (1 - trans);
}

function store_Transmission_from_Option(context)
{
	var option = main::game.option;
	return (1 - option.automatic_gear);
}

function isDirt(course_code)
{
	var ctype = main::menu::MCourseData::GetType(course_code);
	return (ctype == "dirt" || ctype == "snow");
}