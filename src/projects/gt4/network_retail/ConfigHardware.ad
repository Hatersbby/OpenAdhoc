module PROJECT::ROOT
{
	function OnUpdate(context)
	{
		Storage::Open(context, ConnectRoot::gPath, ROOT, "OnUpdate", 2);
		if (!Storage::IsConnected())
		{
			start_page(context, ConnectRoot);
		}
	}

	function onInitialize(context)
	{
		Pane::Hardware::Text::label.text = gVendor + "/" + gProduct;
		Pane::Hardware::Text::label.abbreviate();
	
		Pane::PhyConfig::label.adjustScale();
	
		Pane::PhyConfig::OptionMenu.setIndex(context, gNetcnf.phy_config - 1);
	
		ROOT.setFocus(Pane::Buttons::OK);
	
		var event = main::menu::MScriptEvent(context, ROOT, "OnUpdate");
		context.pushEvent(event);
	}
	
	function onFinalize(context)
	{
		Storage::Close();
	}
	
	function onCancel(context, event, item)
	{
		main::sound.play("cancel");
		start_page(context, ConnectRoot);
		return EVENTRESULT_FILTER;
	}
}

module PROJECT::ROOT::Pane::Buttons::Cancel
{
    function onActivate(context, event, item)
    {
        main::sound.play("cancel");
        start_page(context, ConnectRoot);
        return EVENTRESULT_FILTER;
    }
}

module PROJECT::ROOT::Pane::Buttons::OK
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");
        gNetcnf.phy_config = (Pane::PhyConfig::OptionMenu.index + 1);
        start_page(context, ConfigEdit);
        return EVENTRESULT_FILTER;
    }
}