








module PROJECT
{
    static DEMO = main.defined("DEMO_SKIP_CHECKING_MEMCARD");

    #include "../share/dialog.ad";
    #include "../share/page_util.ad";
    #include "../share/memorycard.ad";
    #include "../share/course_define.ad";

    // Loads "<region>_carlist.adc"
    PROJECT.load(main::game.option.game_zone + "_carlist");

    function initCourse()
    {
        var list = CourseData::all_crslist;
        for (var i = 0; i < list.size; i++)
        {
            var course = list[i];
            main::game.course_record.create(course.code);

            if (course.has_reverse)
                main::game.course_record.create("r_" + course.code);
        }
    }

    function initAvailable()
    {
        var list = InitData::car_carlist;
        for (var i = 0; i < list.size; i++)
        {
            main::game.setCarAvailable(list[i]);
        }

        list = InitData::course_carlist;
        for (var i = 0; i < list.size; i++)
        {
            var course = list[i];
            if (CourseData.defined(course))
            {
                main::game.setCourseAvailable(course);
                if (CourseData[course].has_reverse)
                    main::game.setCourseAvailable("r_" + course);
            }
        }
    }

    function initFavorite()
    {
        if (main::game.favorite_car.getSize() <= 0)
        {
            main::game.favorite_car.clear();
            var list = InitData::favorite_car_carlist;

            for (var i = 0; i < list.size; i++)
            {
                main::game.favorite_car.append(list[i]);
            }
        }

        if (main::game.favorite_course.getSize() <= 0)
        {
            main::game.favorite_course.clear();
            var list = InitData::favorite_course_carlist;

            for (var i = 0; i < list.size; i++)
            {
                main::game.favorite_course.append(list[i]);
            }
        }
    }

    function fillCarAndMoney()
    {
        var list = nil;
        if (main::menu::MSystem::GetProductCode().beginWith("SCES"))
        {
            if (!InitData.defined("car_carlist"))
                return;
            
            list = InitData::car_carlist;
        }
        else
        {

            if (!InitData.defined("garage_carlist"))
                return;

            list = InitData::garage_carlist;
        }

        var garage = main::game.garage;
        for (var i = 0; i < list.size; i++)
        {
            var car = list[i];
            var col = 0;
            garage.addNewCar(car, col);
            main::game.setCarAvailable(car);
        }

        main::game.incMoney(10000000);
    }

    function onLoad(context)
    {
        context.createRenderContext(1);
        var render_context = context.getRenderContext(0);

        main::menu::MMovieFace::initialize(render_context);
        render_context.transition = main::menu::MColorTransition();
        render_context.transition.panIn(render_context);

        LanguageRoot::onLoad(render_context);

        if (main::game.last_sequence == "boot")
        {
            initCourse();
            initAvailable();
            initFavorite();
        }

        if (main::game.next_menu_arg == "")
            render_context.startPage(LoadRoot)
        else
            render_context.startPage(PROJECT[main::game.next_menu_arg]);
    }

    function onUnload(context)
    {
        main::menu::MMovieFace::terminate();
    }

    function exitBootSequence(context)
    {
        if (main::game.major_menu_project == "")
        {
            start_page(context, MovieRoot);
        }
        else
        {
            main::game.next_menu_project = main::game.major_menu_project;
            main::game.next_menu_arg == ""; // That's in original code, Is this intentional or is it supposed to be '='?
            start_page(context, nil);
        }
    }

    function exitLoaded(context)
    {
        clearAutoSaveDisabled();

        main::menu::MMemoryCardManager::setExistValidGameData(true);

        if (main::game.option.opening_after_autoload)
        {
            start_page(context, MovieRoot);
        }
        else
        {
            endBoot(context);
        }
    }

    function endBoot(context)
    {
        if (main::game.major_menu_project == "gtmode")
        {
            start_project(context, "gtmode");
        }
        else
        {
            start_project(context, "arcade");
        }
    }
}